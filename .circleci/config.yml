version: 2.1
references:
  npm_cache_key: &npm_cache_key
                   v1-dependency-npm-{{ checksum "package-lock.json" }}

commands:
  build-and-deploy-study:
    description: "Build and deploy angular study website"
    parameters:
      study_key:
        type: string
      study_guid:
        type: string
      ng_build_opts:
        type: string
    steps:
      - run: Building <<parameters.study_key>> <<parameters.study_guid>>
      - checkout:
          path: ~/repo
      - run:
          name: Update interpolated ENV vars
          command: |
            echo 'export ANGULAR_PROJECT_NAME=ddp-<<parameters.study_key>>' >> $BASH_ENV
            echo 'export ANGULAR_PROJECT_DIR_PATH=projects/ddp-<<parameters.study_key>>' >> $BASH_ENV
            # A hurried solution. I am sure there is a better way to get the vault server address. Perhaps we cook it into Dockerfile?
            echo 'export VAULT_ADDR=`grep "address" /etc/consul-template/config/config.json  | grep -v localhost | grep -Eo "https.*[^\"]"`' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Show pipeline vars
          command: |
            echo "pipeline.id << pipeline.id >>"
            echo "pipeline.number	 << pipeline.number	 >>"
            echo "pipeline.project.git_url << pipeline.project.git_url >>"
            echo "pipeline.project.type << pipeline.project.type >>"
            echo "pipeline.git.tag << pipeline.git.tag >>"
            echo "pipeline.git.branch << pipeline.git.branch >>"
            echo "pipeline.git.revision << pipeline.git.revision >>"
            echo "pipeline.git.base_revision << pipeline.git.base_revision >>"
      - run:
          name: Determine deployment environment
          command: |
            case "<< pipeline.git.branch >>" in
              develop)
                DEPLOY_ENV=dev
              ;;
              appengine_deployment)
                DEPLOY_ENV=dev
              ;;
              staging)
                DEPLOY_ENV=staging
              ;;
              *) DEPLOY_DEV=NOTHING!;;
            esac
            echo "Setting deployment ENVIRONMENT to $DEPLOY_ENV"
            echo "export ENVIRONMENT=$DEPLOY_ENV" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Show ENV variables
          command: env
      - run:
          name: Generate config files
          command: ./build-study.sh v1 $ENVIRONMENT <<parameters.study_key>> <<parameters.study_guid>> --config
          environment:
            USE_DOCKER: false
      - restore_cache:
          key: *npm_cache_key
      - run:
          name: npm install Angular workspace
          command: npm install
          working_directory: ~/repo/ddp-workspace
      - save_cache:
          key: *npm_cache_key
          paths:
            - ./node_modules
      - run:
          name: Angular Build
          command: ng build $ANGULAR_PROJECT_NAME <<parameters.ng_build_opts>> --base-href=/ --output-path=$ANGULAR_PROJECT_DIR_PATH/dist --verbose=true --progress=true
          working_directory: ~/repo/ddp-workspace
      - run:
          name: Setup gcloud context
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            # ran out of time, but demonstration of basic idea extracting data from Vault directly. Needs to be wrapped in nicer way!
            #gcloud --quiet config set compute/zone `vault read  -format=json  secret/pepper/$DEPLOY_ENV/v1/conf | jq -r '.data.gcp.computeZone'`
      - run:
          name: Deploying <<parameters.study_key>> to $ENVIRONMENT
          command: gcloud app deploy --project "broad-ddp-${ENVIRONMENT}" "${ANGULAR_PROJECT_DIR_PATH}/app.yaml"
          working_directory: ~/repo/ddp-workspace


jobs:
  osteo:
    docker:
      - image: broadinstitute/pepper-angular-toolkit:build_v1
    working_directory: ~/repo
    steps:
      - build-and-deploy-study:
          study_key: osteo
          study_guid: CMI_OSTEO
          ng_build_opts: # --prod --aot # use this to enable/disable prod mode
  angio:
    docker:
      - image: broadinstitute/pepper-angular-toolkit:build_v1
    working_directory: ~/repo
    steps:
      - build-and-deploy-study:
          study_key: angio
          study_guid: ANGIO
          ng_build_opts: # --prod --aot # use this to enable/disable prod mode

  brain:
    docker:
      - image: broadinstitute/pepper-angular-toolkit:build_v1
    working_directory: ~/repo
    steps:
      - build-and-deploy-study:
          study_key: brain
          study_guid: cmi_brain
          ng_build_opts: # --prod --aot # use this to enable/disable prod mode

  mbc:
    docker:
      - image: broadinstitute/pepper-angular-toolkit:build_v1
    working_directory: ~/repo
    steps:
      - build-and-deploy-study:
          study_key: mbc
          study_guid: cmi_mbc
          ng_build_opts: # --prod --aot # use this to enable/disable prod mode

workflows:
  version: 2
  build-deploy:
    jobs:
      - osteo:
          filters:
            branches:
              only:
                - appengine_deployment
      - angio:
          filters:
            branches:
              only:
                - appengine_deployment
    - brain:
        filters:
          branches:
            only:
              - appengine_deployment
    - mbc:
        filters:
          branches:
            only:
              - appengine_deployment
