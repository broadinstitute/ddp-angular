version: 2.1
references:
  npm_cache_key: &npm_cache_key
                   v1-dependency-npm-{{ checksum "package-lock.json" }}


executors:
  commit-executor:
    docker:
      - image: broadinstitute/study-server-build:02-20-2020A
    working_directory: ~/repo

  nightly-executor:
    docker:
      - image: broadinstitute/study-server-build:02-20-2020A
    working_directory: ~/repo

commands:

  build-and-deploy-study:
    description: "Build and deploy angular study website"
    parameters:
      study_key:
        type: string
      study_guid:
        type: string
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: <<parameters.study_key>> determine deployment environment
          command: |
            case "<< pipeline.git.branch >>" in
              develop)
                DEPLOY_ENV=dev
              ;;
              angular-appengine-deployment-ctd)
                DEPLOY_ENV=dev
              ;;
              test)
                DEPLOY_ENV=test
                NG_BUILD_OPTS=--prod --aot
              ;;
              staging)
                DEPLOY_ENV=staging
                NG_BUILD_OPTS=--prod --aot
              ;;
              staging)
                DEPLOY_ENV=prod
                NG_BUILD_OPTS=--prod --aot
              ;;
              *)
                echo "Cannot map << pipeline.git.branch >> to a deployment environment"
                exit 17
              ;;
            esac
            echo "Setting deployment ENVIRONMENT to $DEPLOY_ENV"
            echo "export ENVIRONMENT=$DEPLOY_ENV" >> $BASH_ENV
            echo 'export NG_BUILD_OPTS=$NG_BUILD_OPTS' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: <<parameters.study_key>> update interpolated env vars
          command: |
            echo 'export ANGULAR_PROJECT_NAME=ddp-<<parameters.study_key>>' >> $BASH_ENV
            echo 'export ANGULAR_PROJECT_DIR_PATH=projects/ddp-<<parameters.study_key>>' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: <<parameters.study_key>> show pipeline vars
          command: |
            echo "pipeline.id << pipeline.id >>"
            echo "pipeline.number	 << pipeline.number	 >>"
            echo "pipeline.project.git_url << pipeline.project.git_url >>"
            echo "pipeline.project.type << pipeline.project.type >>"
            echo "pipeline.git.tag << pipeline.git.tag >>"
            echo "pipeline.git.branch << pipeline.git.branch >>"
            echo "pipeline.git.revision << pipeline.git.revision >>"
            echo "pipeline.git.base_revision << pipeline.git.base_revision >>"
      - run:
          name: <<parameters.study_key>> show environment variables
          command: env
      - run:
          name: <<parameters.study_key>> generate config files
          command: ./build-study.sh v1 $ENVIRONMENT . <<parameters.study_key>> <<parameters.study_guid>> --config
          environment:
            USE_DOCKER: false
      # todo: conditionally don't build if we already have cached the tarball for the SHA+ENV somewhere (circle artifacts?  github package manager?  GCP bucket?
      # for better build reproducibility, we want to move the same build artifacts to different environments and not rebuild them and
      # suffer the pain of npm caching, package-lock, and auto-upgrade pitfalls
      - restore_cache:
          key: *npm_cache_key
      - run:
          name: <<parameters.study_key>> npm install
          command: npm install
          working_directory: ~/repo/ddp-workspace
      - save_cache:
          key: *npm_cache_key
          paths:
            - ./node_modules
      - run:
          name: <<parameters.study_key>> ng build
          command: ng build $ANGULAR_PROJECT_NAME $NG_BUILD_OPTS --base-href=/ --output-path=$ANGULAR_PROJECT_DIR_PATH/dist --verbose=true --progress=true
          working_directory: ~/repo/ddp-workspace
      - run:
          name: <<parameters.study_key>> setup gcloud context
          command: |
            ./readvault.sh secret/pepper/dev/v1/conf .data.gcp.serviceKey | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
          name: <<parameters.study_key>> deploy to GAE
          command: gcloud app deploy --version="${CIRCLE_SHA1}" --project "broad-ddp-${ENVIRONMENT}" "${ANGULAR_PROJECT_DIR_PATH}/app.yaml"
          working_directory: ~/repo/ddp-workspace
  setup-build-workspace:
    description: "Setup workspace used by all projects"
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          key: *npm_cache_key
      - run:
          name: npm install
          command: npm install
          working_directory: ~/repo/ddp-workspace
      - save_cache:
          key: *npm_cache_key
          paths:
            - ./node_modules
  build-app:
    description: "Build DDP study app"
    parameters:
      study_key:
        type: string
    steps:
      - run:
          name: <<parameters.study_key>> ng build
          command: |
            ANGULAR_PROJECT_NAME=ddp-<< parameters.study_key >>}
            ng build $ANGULAR_PROJECT_NAME --prod --aot --base-href=/ --output-path=dist/$ANGULAR_PROJECT_NAME --verbose=true --progress=true
          working_directory: ~/repo/ddp-workspace
  store-app-build:
    description: "Copy build to cloud storage"
    parameters:
      study_key:
        type: string
    steps:
      - run:
          name: Create archive file
          command: |
            ANGULAR_PROJECT_NAME="ddp-${<< parameters.study_key >>}"
            GIT_SHA=`git rev-parse --verify --short HEAD`
            DATE=`date +%F`
            TAR_FILE_NAME="${ANGULAR_PROJECT_NAME}_${DATE}_${GIT_SHA}.tar.gz"
            BUILDS_BUCKET=ddp-angular-builds
            cd dist/${ANGULAR_PROJECT_NAME}
            tar -czvf "/tmp/${TAR_NAME}" .
            gsutil cp  /tmp/ddp-angio_2020-02-24_660d0ac.tar.gz "gs://${BUILDS_BUCKET}/${ANGULAR_PROJECT_NAME}/${TAR_FILE_NAME}"
          working_directory: ~/repo/ddp-workspace

jobs:
  osteo-build-and-deploy:
    executor:
      name: commit-executor
    steps:
      - build-and-deploy-study:
          study_key: osteo
          study_guid: CMI-OSTEO

  osteo-build-and-save:
    executor:
      name: commit-executor
    steps:
      - setup-build-workspace
      - build-app:
          study_key: osteo
      - store-app-build:
          study_key: osteo
  angio:
    executor:
      name: commit-executor
    steps:
      - build-and-deploy-study:
          study_key: angio
          study_guid: ANGIO

  brain:
    executor:
      name: commit-executor
    steps:
      - build-and-deploy-study:
          study_key: brain
          study_guid: cmi-brain

  mbc:
    executor:
      name: commit-executor
    steps:
      - build-and-deploy-study:
          study_key: mbc
          study_guid: cmi-mbc

workflows:
  version: 2
  build-deploy:
    jobs:
      - osteo-build-and-deploy:
          # todo: more DRY on branch filtering
          filters:
            branches:
              only:
                - develop
      - osteo-build-and-save:
          filters:
            branches:
              only:
                - /^angular-appengine-deployment.*/
#      - osteo-deploy-only:
#          filters:
#            tags:
#              only:
#                - /^angular_test_.*/
      - angio:
          filters:
            branches:
              only:
                - develop
      - brain:
          filters:
            branches:
              only:
                - develop
      - mbc:
          filters:
            branches:
              only:
                - develop
#  nightly:
#    # run a build on develop using --prod --aot as an early warning for prod/aot issues
#
#    triggers:
#      - schedule:
#          cron: "0 22 * * *"
#          filters:
#            branches:
#              only:
#                - develop
#    jobs:
#      - osteo:
#          name: osteo-nightly
#      - angio:
#          name: angio-nightly
#      - brain:
#          name: brain-nightly
#      - mbc:
#          name: mbc-nightly
